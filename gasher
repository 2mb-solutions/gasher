#!/bin/bash

clientName="${0##*/}"
clientName="${clientName^}"

show_help()
{
cat << EOF
$clientName, a 2MB Solutions product.
 released under the GPL version 3 or later.
For more great stuff, visit http://2mb.solutions
Solutions at the speed of AWESOME!

Usage:
$clientName -h --help: This help screen.
$clientName -m --mentions: Read your mensions (replies).
$clientName -p --post: Post to your node.
$clientName -t --timeline: Read your timeline.
$clientName -u --user: Read your statuses only.
EOF
}

# Display information
display_text()
{
# backup IFS
ifs="$IFS"
IFS=$'\n'
createdAt=($(echo "$1" | grep '^  <created_at>' | sed -e 's/^  <created_at>//' -e 's/<\/created_at>$//'))
name=($(echo "$1" | grep '^   <name>' | sed -e 's/^   <name>//' -e 's/<\/name>$//'))
source=($(echo "$1" | grep '^  <source>' | sed -e 's/^  <source>//' -e 's/<\/source>$//'))
text=($(echo "$1" | grep '^  <text>' | sed -e 's/^  <text>//' -e 's/<\/text>$//'))
#display info
i=0
unset pagerText
while [ $i -lt ${#name[*]} ]; do
pagerText="${pagerText}${name[$i]}: ${text[$i]}\nPosted: ${createdAt[$i]} from ${source[$i]}\n"
((i++))
done
IFS="$ifs"
echo -e "$pagerText" | $PAGER
}

# Set up the configuration directory information
if [ -z "$XDG_USER_HOME" ]; then
    configPath="$HOME/.config/gasher"
else
    configPath="$$XDG_UER_HOME/gasher"
fi
if [ ! -d "$configPath" ]; then
    mkdir -p "$configPath"
fi

# Create settings if they do not exist.
if [ ! -f "$configPath/config" ]; then
    echo "Welcome to $clientName! A 2MB Solutions product."
    echo "It appears you do not have a GNU Social account configured."
    echo "Setup is quick and painless."
    echo
    read -p "Please enter your GNU Social username, This is the part before the @ symble: " userName
    read -p "Please enter your GNU Social node: " -e -i social.2mb.solutions userNode
    read -sp "Please enter your GNU Social password: " password
    echo
    echo -e "userName=$userName\npassword=$password\nuserNode=$userNode" > "$configPath/config"
    if [ $? -eq 0 ] ; then
        echo "Thanks, setup is now complete. Welcome to $clientName $userName@$userNode."
    fi
fi

# read settings
source "$configPath/config"
# Pager is set here, to allow the PAGER variable to be set in either invironment or gasher's config
if [ -z "$PAGER" ]; then
PAGER=more
fi

# actions are based on $1
# Default is -t
case "$1" in
"-p" | "--post")
shift
status="$*"
result="$(curl -s -u "$userName:$password" -d status="$status" -d source="$clientName" $userNode/api/statuses/update.xml)"
error="$(echo "$result" | grep '^ <error>' | sed -e 's/<error>//' -e 's/<\/error>//' -e 's/^ //')"
if [ -n "$error" ]; then
echo "$error"
exit 1
fi
reply="$(echo "$result" | grep '^ <in_reply_to>' | sed -e 's/<in_reply_to>//' -e 's/<\/in_reply_to>//' -e 's/^ //')"
if [ -n "$reply" ]; then
echo "Status posted in reply to $reply."
else
echo "Status posted"
fi
;;
"-m" | "--mentions")
result="$(curl -s -u "$userName:$password" $userNode/api/statuses/mentions_timeline.xml)"
display_text "$result"
;;
"-t" | "--timeline" | "")
result="$(curl -s -u "$userName:$password" $userNode/api/statuses/home_timeline.xml)"
display_text "$result"
;;
"-u" | "--user")
result="$(curl -s -u "$userName:$password" $userNode/api/statuses/home_timeline.xml)"
display_text "$result"
;;
*)
show_help
esac
exit 0
